from functools import reduce
import numbers
import numpy as np
from functools import lru_cache
from tqdm import tqdm
from src.utils import fibonacci, get_primes, get_prime_factors, is_palindrome


def problem_1():
	# 	If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
	#
	# Find the sum of all the multiples of 3 or 5 below 1000.

	MAX_NB = 1000
	multiples = [3, 5]

	a = np.arange(start=0, stop=MAX_NB)

	mask = np.zeros_like(a)
	for multiple in multiples:
		mask = np.logical_or(mask, (a % multiple) == 0)
	
	a_multiples = a[mask]
	solution = np.sum(a_multiples)
	
	return solution





def problem_2():
	# 	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
	#
	# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	#
	# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

	max_value = 4e6
	f_sum = 0

	f = fibonacci(0)

	step = 0
	while f < max_value:
		if f % 2 == 0:
			f_sum += f
		step += 1
		f = fibonacci(step)
	
	return f_sum


def problem_3(number=600851475143):
	# The prime factors of 13195 are 5, 7, 13 and 29.
	# What is the largest prime factor of the number 600851475143 ?

	factors = get_prime_factors(number)
	print(f"{factors = }")
	solution = list(factors.keys())[-1]
	return solution


def problem_4(max_number=(999*999)):
	# A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
	#
	# Find the largest palindrome made from the product of two 3-digit numbers.

	min_nb = 100
	max_nb = 1000
	last = -1
	for i in range(min_nb, max_nb):
		for ii in range(min_nb, max_nb):
			nb = i * ii
			if is_palindrome(nb):
				if nb > last:
					last = nb
	return last


def problem_5(nb:int=12):
	# 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
	#
	# What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?

	primes = get_primes(nb + 1, verbose=False)
	factors = {}
	for i in range(1, nb + 1):
		n_factors = get_prime_factors(i, primes_list=primes)
		for n_k, n_v in n_factors.items():
			v = factors.get(n_k, -1)
			if v < n_v:
				factors[n_k] = n_v
	compose_list = [p ** e for p, e in factors.items()]
	solution = reduce((lambda x, y: x * y), compose_list)
	return solution


all_problems = {
	1: problem_1,
	2: problem_2,
	3: problem_3,
	4: problem_4,
	5: problem_5,
}
